From 7e613818e6161c2543825871fcbb70184268db4a Mon Sep 17 00:00:00 2001
From: Michael Bestas <mikeioannina@gmail.com>
Date: Sat, 4 May 2013 20:14:42 +0300
Subject: [PATCH] Correct bootlogo format

Use rgb8888 format for bootlogo
Code from samsung d2 kernel

Signed-off-by: Michael Bestas <mikeioannina@gmail.com>

Change-Id: I365db2ac599b6fb1e3d734b3e770470847a2ae45
---
 drivers/video/msm/logo.c | 87 +++++++++++++++++++++++++++++++-----------------
 1 file changed, 56 insertions(+), 31 deletions(-)

diff --git a/drivers/video/msm/logo.c b/drivers/video/msm/logo.c
index 30c56e6..b2027f3 100644
--- a/drivers/video/msm/logo.c
+++ b/drivers/video/msm/logo.c
@@ -22,27 +22,46 @@
 #include <linux/syscalls.h>
 
 #include <linux/irq.h>
+#include <asm/cacheflush.h>
 #include <asm/system.h>
 
 #define fb_width(fb)	((fb)->var.xres)
 #define fb_height(fb)	((fb)->var.yres)
-#define fb_depth(fb)	((fb)->var.bits_per_pixel >> 3)
-#define fb_size(fb)	(fb_width(fb) * fb_height(fb) * fb_depth(fb))
+#define fb_size(fb)	((fb)->var.xres * (fb)->var.yres * 2)
 
-static void memset16(void *_ptr, unsigned short val, unsigned count)
+/* convert RGB565 to RBG8888 */
+static int total_pixel = 1;
+static int memset16_rgb8888(void *_ptr, unsigned short val, unsigned count,
+				struct fb_info *fb)
 {
 	unsigned short *ptr = _ptr;
+	unsigned short red;
+	unsigned short green;
+	unsigned short blue;
+	int need_align = (fb->fix.line_length >> 2) - fb->var.xres;
+	int align_amount = need_align << 1;
+	int pad = 0;
+
+	red = (val & 0xF800) >> 8;
+	green = (val & 0x7E0) >> 3;
+	blue = (val & 0x1F) << 3;
+
 	count >>= 1;
-	while (count--)
-		*ptr++ = val;
-}
+	while (count--) {
+		*ptr++ = (green << 8) | red;
+		*ptr++ = blue;
 
-static void memset32(void *_ptr, unsigned int val, unsigned count)
-{
-	unsigned int *ptr = _ptr;
-	count >>= 2;
-	while (count--)
-		*ptr++ = val;
+		if (need_align) {
+			if (!(total_pixel % fb->var.xres)) {
+				ptr += align_amount;
+				pad++;
+			}
+		}
+
+		total_pixel++;
+	}
+
+	return pad * align_amount;
 }
 
 /* 565RLE image format: [count(2 bytes), rle(2 bytes)] */
@@ -52,6 +71,8 @@ int load_565rle_image(char *filename, bool bf_supported)
 	int fd, count, err = 0;
 	unsigned max;
 	unsigned short *data, *bits, *ptr;
+	struct module *owner;
+	int pad;
 
 	info = registered_fb[0];
 	if (!info) {
@@ -60,6 +81,14 @@ int load_565rle_image(char *filename, bool bf_supported)
 		return -ENODEV;
 	}
 
+	owner = info->fbops->owner;
+	if (!try_module_get(owner))
+		return -ENODEV;
+	if (info->fbops->fb_open && info->fbops->fb_open(info, 0)) {
+		module_put(owner);
+		return -ENODEV;
+	}
+
 	fd = sys_open(filename, O_RDONLY, 0);
 	if (fd < 0) {
 		printk(KERN_WARNING "%s: Can not open %s\n",
@@ -68,7 +97,6 @@ int load_565rle_image(char *filename, bool bf_supported)
 	}
 	count = sys_lseek(fd, (off_t)0, 2);
 	if (count <= 0) {
-		sys_close(fd);
 		err = -EIO;
 		goto err_logo_close_file;
 	}
@@ -92,27 +120,24 @@ int load_565rle_image(char *filename, bool bf_supported)
 		       __func__, __LINE__, info->node);
 		goto err_logo_free_data;
 	}
-	bits = (unsigned short *)(info->screen_base);
-	while (count > 3) {
-		unsigned n = ptr[0];
-		if (n > max)
-			break;
-
-		if (fb_depth(info) == 2) {
-			memset16(bits, ptr[1], n << 1);
-		} else {
-			unsigned int widepixel = ptr[1];
-			widepixel = (widepixel & 0x001f) << (19-0) |
-					(widepixel & 0x07e0) << (10-5) |
-					(widepixel & 0xf800) >> (11-3);
-			memset32(bits, widepixel, n << 2);
+	if (info->screen_base) {
+		bits = (unsigned short *)(info->screen_base);
+		while (count > 3) {
+			unsigned n = ptr[0];
+			if (n > max)
+				break;
+			pad = memset16_rgb8888(bits, ptr[1], n << 1, info);
+			bits += n << 1;
+			bits += pad;
+			max -= n;
+			ptr += 2;
+			count -= 4;
 		}
-		bits += n * fb_depth(info);
-		max -= n;
-		ptr += 2;
-		count -= 4;
 	}
 
+	flush_cache_all();
+	outer_flush_all();
+
 err_logo_free_data:
 	kfree(data);
 err_logo_close_file:
-- 
1.8.1.6

